-In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

Q1: How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

Q2: How many of those orders were for an 'iPhone'?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product LIKE '%iPhone%'
AND length(orderid) = 6
AND orderid <> 'Order ID';

Q3: Select the customer account numbers for all the orders that were placed in February. 
SELECT customers.acctnum FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE length (orderid) = 6
AND orderid <> 'Order ID';

/*
OR
/*

SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=Feb.orderid
WHERE length (orderid) = 6
AND orderid <> 'Order ID';

Q4: Which product was the cheapest one sold in January, and what was the price? 
SELECT JanSales.Product, MIN(JanSales.price) as Price
FROM BIT_DB.JanSales;

/*
OR
/*

SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

/*
Multiple other ways to properly complete using commands such as GROUP BY or LIMIT
/*

Q5: What is the total revenue for each product sold in January?
SELECT product, sum(quantity)*price AS revenue
FROM BIT_DB.JanSales
GROUP BY product;

Q6: Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, SUM(quantity) AS number_sold, SUM(quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location LIKE '%548 Lincoln St, Seattle, WA 98101%';

/*
OR
/*

SELECT
SUM(Quantity),
product,
SUM(quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

Q7: How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT 
COUNT(distinct cust.acctnum),
AVG(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID = cust.order_id
WHERE Feb.Quantity >2
AND length(orderid) = 6
AND orderid <> 'Order ID';

Q8: Lists all products sold in Feb in LA including how many of each were sold.
SELECT Product,
SUM(Quantity)
FROM BIT_DB.FebSales as Feb
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;

Q9: Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT distinct location,
count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2;

Q10: How many of each type of headphone were sold in February?
SELECT Product,
sum(Quantity) as Quantity
FROM BIT_DB.FebSales
where Product like '%Headphones%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product;

Q11: What was the average amount spent per account in February?
SELECT SUM(quantity*price)/count(Customers.acctnum)
FROM BIT_DB.FebSales as Feb
LEFT JOIN BIT_DB.customers as Customers
ON Feb.orderID=Customers.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

/*
OR
/*

SELECT avg(quantity*price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
on FebSales.orderID=customers.order_id
WHERE length(order_id) = 6
AND order_id <> 'Order ID';

Q12: What was the average quantity of products purchased per account in February? 
SELECT sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_ID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

Q13: Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product,
SUM(quantity*price)
FROM BIT_DB.FebSales
GROUP BY Product
ORDER BY sum(quantity*price) desc
LIMIT 1;



