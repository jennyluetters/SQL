/*
SPOTIFY PROJECT USING KAGGLE DATA
/*

-Creates table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-Download Kaggle file then uploaded informationto table as .csv file

-Determined average popularity, danceability and energy by artist and track.
SELECT 
artist_name
, track_name
, avg(popularity)
, avg(danceability)
, avg(energy)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

-Determined top 20 artists by popularity
SELECT artist_name
, track_name
, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 20;

-Determined song with longest time_signature
SELECT artist_name
, track_name
, time_signature
FROM BIT_DB.Spotifydata
ORDER BY time_signature desc
LIMIT 1;

-Determined energy levels of tracks as either 'high' or 'low' depending on energy measurement in table
SELECT track_name, energy,
CASE
WHEN energy < .45 THEN 'low'
ELSE 'high'
END AS energy_level
FROM BIT_DB.spotifydata
GROUP BY track_name
ORDER BY energy;
